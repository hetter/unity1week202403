// <auto-generated />
#pragma warning disable CS0105
/*Auto Create, Don't Edit !!!*/

using UnityEngine;
using MasterMemory.Validation;
using MasterMemory;
using MessagePack;
using System.Collections.Generic;
using System.IO;
using System;

namespace DummyEgg.MasterDataWorker.Tables
{
   public sealed partial class MstJobBaseData_MMItemTable : TableBase<MstJobBaseData_MMItem>, ITableUniqueValidate
   {
        public Func<MstJobBaseData_MMItem, int> PrimaryKeySelector => primaryIndexSelector;
        readonly Func<MstJobBaseData_MMItem, int> primaryIndexSelector;


        public MstJobBaseData_MMItemTable(MstJobBaseData_MMItem[] sortedData)
            : base(sortedData)
        {
            this.primaryIndexSelector = x => x.job_id;
            OnAfterConstruct();
        }

        partial void OnAfterConstruct();


        [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public MstJobBaseData_MMItem FindByjob_id(int key)
        {
            var lo = 0;
            var hi = data.Length - 1;
            while (lo <= hi)
            {
                var mid = (int)(((uint)hi + (uint)lo) >> 1);
                var selected = data[mid].job_id;
                var found = (selected < key) ? -1 : (selected > key) ? 1 : 0;
                if (found == 0) { return data[mid]; }
                if (found < 0) { lo = mid + 1; }
                else { hi = mid - 1; }
            }
            return ThrowKeyNotFound(key);
        }

        [System.Runtime.CompilerServices.MethodImpl(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public bool TryFindByjob_id(int key, out MstJobBaseData_MMItem result)
        {
            var lo = 0;
            var hi = data.Length - 1;
            while (lo <= hi)
            {
                var mid = (int)(((uint)hi + (uint)lo) >> 1);
                var selected = data[mid].job_id;
                var found = (selected < key) ? -1 : (selected > key) ? 1 : 0;
                if (found == 0) { result = data[mid]; return true; }
                if (found < 0) { lo = mid + 1; }
                else { hi = mid - 1; }
            }
            result = default;
            return false;
        }

        public MstJobBaseData_MMItem FindClosestByjob_id(int key, bool selectLower = true)
        {
            return FindUniqueClosestCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<int>.Default, key, selectLower);
        }

        public RangeView<MstJobBaseData_MMItem> FindRangeByjob_id(int min, int max, bool ascendant = true)
        {
            return FindUniqueRangeCore(data, primaryIndexSelector, System.Collections.Generic.Comparer<int>.Default, min, max, ascendant);
        }


        void ITableUniqueValidate.ValidateUnique(ValidateResult resultSet)
        {
#if !DISABLE_MASTERMEMORY_VALIDATOR

            ValidateUniqueCore(data, primaryIndexSelector, "job_id", resultSet);       

#endif
        }

#if !DISABLE_MASTERMEMORY_METADATABASE

        public static MasterMemory.Meta.MetaTable CreateMetaTable()
        {
            return new MasterMemory.Meta.MetaTable(typeof(MstJobBaseData_MMItem), typeof(MstJobBaseData_MMItemTable), "MstJobBaseData_MMItem",
                new MasterMemory.Meta.MetaProperty[]
                {
                    new MasterMemory.Meta.MetaProperty(typeof(MstJobBaseData_MMItem).GetProperty("job_id")),
                    new MasterMemory.Meta.MetaProperty(typeof(MstJobBaseData_MMItem).GetProperty("hp")),
                    new MasterMemory.Meta.MetaProperty(typeof(MstJobBaseData_MMItem).GetProperty("mp")),
                    new MasterMemory.Meta.MetaProperty(typeof(MstJobBaseData_MMItem).GetProperty("phy_atk")),
                    new MasterMemory.Meta.MetaProperty(typeof(MstJobBaseData_MMItem).GetProperty("phy_def")),
                    new MasterMemory.Meta.MetaProperty(typeof(MstJobBaseData_MMItem).GetProperty("mag_atk")),
                    new MasterMemory.Meta.MetaProperty(typeof(MstJobBaseData_MMItem).GetProperty("mag_def")),
                    new MasterMemory.Meta.MetaProperty(typeof(MstJobBaseData_MMItem).GetProperty("dex")),
                },
                new MasterMemory.Meta.MetaIndex[]{
                    new MasterMemory.Meta.MetaIndex(new System.Reflection.PropertyInfo[] {
                        typeof(MstJobBaseData_MMItem).GetProperty("job_id"),
                    }, true, true, System.Collections.Generic.Comparer<int>.Default),
                });
        }

#endif
    }
}